using Routine.Service.HeaderProcessor;

namespace Routine.Service.Configuration;

public partial class HeaderProcessorBuilder
{
    public Predefined1HeaderProcessor For(string headerKey1) => new(headerKey1);
    public Predefined2HeaderProcessor For(string headerKey1, string headerKey2) => new(headerKey1, headerKey2);
    public Predefined3HeaderProcessor For(string headerKey1, string headerKey2, string headerKey3) => new(headerKey1, headerKey2, headerKey3);
    public Predefined4HeaderProcessor For(string headerKey1, string headerKey2, string headerKey3, string headerKey4) => new(headerKey1, headerKey2, headerKey3, headerKey4);
    public Predefined5HeaderProcessor For(string headerKey1, string headerKey2, string headerKey3, string headerKey4, string headerKey5) => new(headerKey1, headerKey2, headerKey3, headerKey4, headerKey5);
    public Predefined6HeaderProcessor For(string headerKey1, string headerKey2, string headerKey3, string headerKey4, string headerKey5, string headerKey6) => new(headerKey1, headerKey2, headerKey3, headerKey4, headerKey5, headerKey6);
    public Predefined7HeaderProcessor For(string headerKey1, string headerKey2, string headerKey3, string headerKey4, string headerKey5, string headerKey6, string headerKey7) => new(headerKey1, headerKey2, headerKey3, headerKey4, headerKey5, headerKey6, headerKey7);
    public Predefined8HeaderProcessor For(string headerKey1, string headerKey2, string headerKey3, string headerKey4, string headerKey5, string headerKey6, string headerKey7, string headerKey8) => new(headerKey1, headerKey2, headerKey3, headerKey4, headerKey5, headerKey6, headerKey7, headerKey8);
    public Predefined9HeaderProcessor For(string headerKey1, string headerKey2, string headerKey3, string headerKey4, string headerKey5, string headerKey6, string headerKey7, string headerKey8, string headerKey9) => new(headerKey1, headerKey2, headerKey3, headerKey4, headerKey5, headerKey6, headerKey7, headerKey8, headerKey9);
    public Predefined10HeaderProcessor For(string headerKey1, string headerKey2, string headerKey3, string headerKey4, string headerKey5, string headerKey6, string headerKey7, string headerKey8, string headerKey9, string headerKey10) => new(headerKey1, headerKey2, headerKey3, headerKey4, headerKey5, headerKey6, headerKey7, headerKey8, headerKey9, headerKey10);
    public Predefined11HeaderProcessor For(string headerKey1, string headerKey2, string headerKey3, string headerKey4, string headerKey5, string headerKey6, string headerKey7, string headerKey8, string headerKey9, string headerKey10, string headerKey11) => new(headerKey1, headerKey2, headerKey3, headerKey4, headerKey5, headerKey6, headerKey7, headerKey8, headerKey9, headerKey10, headerKey11);
    public Predefined12HeaderProcessor For(string headerKey1, string headerKey2, string headerKey3, string headerKey4, string headerKey5, string headerKey6, string headerKey7, string headerKey8, string headerKey9, string headerKey10, string headerKey11, string headerKey12) => new(headerKey1, headerKey2, headerKey3, headerKey4, headerKey5, headerKey6, headerKey7, headerKey8, headerKey9, headerKey10, headerKey11, headerKey12);
    public Predefined13HeaderProcessor For(string headerKey1, string headerKey2, string headerKey3, string headerKey4, string headerKey5, string headerKey6, string headerKey7, string headerKey8, string headerKey9, string headerKey10, string headerKey11, string headerKey12, string headerKey13) => new(headerKey1, headerKey2, headerKey3, headerKey4, headerKey5, headerKey6, headerKey7, headerKey8, headerKey9, headerKey10, headerKey11, headerKey12, headerKey13);
    public Predefined14HeaderProcessor For(string headerKey1, string headerKey2, string headerKey3, string headerKey4, string headerKey5, string headerKey6, string headerKey7, string headerKey8, string headerKey9, string headerKey10, string headerKey11, string headerKey12, string headerKey13, string headerKey14) => new(headerKey1, headerKey2, headerKey3, headerKey4, headerKey5, headerKey6, headerKey7, headerKey8, headerKey9, headerKey10, headerKey11, headerKey12, headerKey13, headerKey14);
    public Predefined15HeaderProcessor For(string headerKey1, string headerKey2, string headerKey3, string headerKey4, string headerKey5, string headerKey6, string headerKey7, string headerKey8, string headerKey9, string headerKey10, string headerKey11, string headerKey12, string headerKey13, string headerKey14, string headerKey15) => new(headerKey1, headerKey2, headerKey3, headerKey4, headerKey5, headerKey6, headerKey7, headerKey8, headerKey9, headerKey10, headerKey11, headerKey12, headerKey13, headerKey14, headerKey15);
}
